@using JoinRpg.DataModel
@using JoinRpg.Web.Models
@model CommentViewModel

@helper ShowCommentWithTree(CommentViewModel comment, int deepLevel)
{
if (!comment.IsVisible)
{
    return;
}
var hideClassName = !comment.IsVisibleToPlayer ? "world-object-hidden" : "";
    <div class="" style="clear: both" id="comment@(comment.CommentId)">
        <table>
            <tr>
                <td class="hidden-xs" style="vertical-align: text-top;padding-right: 5px">
                    @Html.Partial("DisplayTemplates/UserAvatar", comment.Author)
                </td>
                <td>
                    <div class="@hideClassName" style="margin-bottom: 1em;">
                        <div class="">
                            @if (comment.IsCommentByPlayer)
                            {
                                <span>Игрок</span>
                            }
                            else
                            {
                                <span>Мастер</span>
                            }
                            @Html.DisplayFor(model => comment.Author) написал(а) @Html.DisplayFor(c => comment.CreatedTime, "EventTime")

                            @if (!comment.IsVisibleToPlayer)
                            {
                                <strong>
                                    <span>другим мастерам</span>
                                </strong>
                            }

                            @if (!comment.IsRead)
                            {
                                <span class="label label-default" title="Новый комментарий">New</span>
                            }

                            <a href="@Url.Action("RedirectToDiscussion", "Forum", new {comment.ProjectId, comment.CommentId})">#</a>

                            @if (comment.HasMasterAccess && !comment.ChildComments.Any() && comment.IsVisibleToPlayer && !comment.IsCommentByPlayer)
                            {
                                <a href="@Url.Action("ConcealComment", "Forum", new { comment.ProjectId, comment.CommentId, comment.CommentDiscussionId})" class="glyphicon glyphicon-eye-close" title="Скрыть комментарий от игрока"></a>
                            }

                        </div>

                        @{ AddCommentViewModel addCommentModel = new AddCommentViewModel(comment) { ActionName = "Ответить" }; }

                        @if (comment.Finance != null)
                        {
                            @Html.Partial("..\\Comments\\_CommentFinancePartial", new CommentFinanceOperationViewModel(comment, addCommentModel.FormIndex))
                        }

                        @if (comment.ExtraAction != null && comment.Finance == null)
                        {
                            <b>@Html.DisplayFor(model => comment.ExtraAction)</b>
                        }

                        <div>@comment.CommentText</div>

                        <div id="@(addCommentModel.AddButtonId)" class="collapse in">
                            <button class="btn btn-default btn-sm" onclick="toggleCommentEditor(@(addCommentModel.FormIndex))">Ответить</button>
                        </div>
                        <div id="@(addCommentModel.FormId)" class="collapse">
                            @Html.Partial("..\\Comments\\_AddCommentFormPartial", addCommentModel)
                        </div>
                    </div>
                </td>
            </tr>
        </table>
    
    
    
        <div>
           
            @foreach (var childComment in comment.ChildComments)
            {
                var style = deepLevel < 4 ? "margin-left:2em" : "";
            <div style="@style">
                @ShowCommentWithTree(childComment, deepLevel + 1)
            </div>
            }
        </div>
    
</div>
}

@ShowCommentWithTree(Model, 0)
