on:
  workflow_call:
    inputs:
      deployVersion:
        required: true
        type: string
      environment_url:
        required: true
        type: string
      environment:
        required: true
        type: string
env:
  APP_NAME: joinrpg-portal
  MIGRATOR_NAME: joinrpg-dal-migrate

jobs:
  deploy:
    environment: 
      name: ${{ inputs.environment }} 
      url: ${{ inputs.environment_url }}
    name: deploy
    env:
      ENVIRONMENT: ${{ inputs.environment }} 
    runs-on: ubuntu-20.04
    permissions: read-all
    steps:
      - name: Check images existance and fill images related env vars
        id: check_existence
        run: |  
          APP_REPOSITORY_ID=$(echo ${{ github.repository_owner }}/${APP_NAME}  | tr '[A-Z]' '[a-z]')
          APP_IMAGE_ID=$(echo ghcr.io/${APP_REPOSITORY_ID}| tr '[A-Z]' '[a-z]')

          MIGRATOR_REPOSITORY_ID=$(echo ${{ github.repository_owner }}/${MIGRATOR_NAME}  | tr '[A-Z]' '[a-z]')
          MIGRATOR_IMAGE_ID=$(echo ghcr.io/${MIGRATOR_REPOSITORY_ID}| tr '[A-Z]' '[a-z]')

          COMMON_IMAGE_VERSION=$(echo ${{ inputs.deployVersion }} | tr '[A-Z]' '[a-z]')

          REPOSITORY_TOKEN=$(curl -u ${{ github.repository_owner }}:${{ secrets.GITHUB_TOKEN }} https://ghcr.io/token\?scope\="repository:${APP_REPOSITORY_ID}:pull" | jq -r .token)

          curl --head --fail -H "Authorization: Bearer ${REPOSITORY_TOKEN}" https://ghcr.io/v2/${APP_IMAGE_ID}/manifests/${COMMON_IMAGE_VERSION}
          curl --head --fail -H "Authorization: Bearer ${REPOSITORY_TOKEN}" https://ghcr.io/v2/${MIGRATOR_IMAGE_ID}/manifests/${COMMON_IMAGE_VERSION} 
          
          echo "APP_IMAGE_ID=${APP_IMAGE_ID}" >> $GITHUB_ENV
          echo "MIGRATOR_IMAGE_ID=${APP_IMAGE_ID}" >> $GITHUB_ENV

          echo "COMMON_IMAGE_VERSION=${COMMON_IMAGE_VERSION}" >> $GITHUB_ENV
      
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
    
      - name: Set kubeconfig
        uses: azure/k8s-set-context@v2
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Turn github secrets to .env file
        uses: shine1594/secrets-to-env-action@master
        with:
          secrets: ${{ toJSON(secrets) }}
          secrets_env: all
          prefix_prod: ''
          prefix_dev: ''
          file_name_prod: 'joinrpg-main.secret.env'
          file_name_dev: 'joinrpg-main.secret.env'
        
      - name: Generate environment manifests
        run: |
            cat <<EOF >> ./manifests/${ENVIRONMENT}/kustomization.yaml
            
            secretGenerator:
            - name: joinrpg-main
            files:
            - joinrpg-main.secret.env

            images:
            - name: ${APP_NAME}
              newName: ${{ env.APP_IMAGE_ID }}
              newTag: ${{ env.COMMON_IMAGE_VERSION }}

            - name: ${MIGRATOR_NAME}
              newName: ${{ env.MIGRATOR_IMAGE_ID }}
              newTag: ${{ env.COMMON_IMAGE_VERSION }}

            EOF
            mkdir kustomize_output
            kubectl kustomize ./manifests/${ENVIRONMENT}/ -o kustomize_output
        
      - name: Show generated environment manifests
        run: cat manifests.result.yaml
        
      - name: Apply DB migrations
        run: |
          kubectl replace --force -f ./kustomize_output/v1_secret_joinrpg-main-* -f ./kustomize_output/batch_v1_job_joinrpg-dal-migrate.yaml --namespace ${ENVIRONMENT} --insecure-skip-tls-verify
          kubectl wait --for=condition=complete --timeout=120s job/joinrpg-dal-migrate --namespace ${ENVIRONMENT} --insecure-skip-tls-verify

      - name: Deploy to k8s
        run: |
          kubectl replace --force -f ./kustomize_output/* --namespace ${ENVIRONMENT} --insecure-skip-tls-verify
          kubectl rollout status deployment/${APP_NAME} --namespace ${ENVIRONMENT} --insecure-skip-tls-verify
